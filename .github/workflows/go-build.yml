name: Build and Release

on:
  push:
    branches: ["**"]
    tags: ["**"]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          # Exclude arm64 for windows (not commonly used)
          - goos: windows
            goarch: arm64

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          if [ "${{ matrix.goos }}" = "windows" ]; then
            BINARY_NAME="bulker-${{ matrix.goos }}-${{ matrix.goarch }}.exe"
          else
            BINARY_NAME="bulker-${{ matrix.goos }}-${{ matrix.goarch }}"
          fi
          
          echo "Building for ${{ matrix.goos }}/${{ matrix.goarch }}"
          go build -v -ldflags="-s -w" -o "$BINARY_NAME" .
          
          # Set executable permissions for Unix systems
          if [ "${{ matrix.goos }}" != "windows" ]; then
            chmod +x "$BINARY_NAME"
          fi
          
          # Create checksum
          if command -v sha256sum >/dev/null; then
            sha256sum "$BINARY_NAME" > "$BINARY_NAME.sha256"
          fi
          
          # Show file info
          ls -la "$BINARY_NAME"*
          file "$BINARY_NAME" || true

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: bulker-${{ matrix.goos }}-${{ matrix.goarch }}
          path: |
            bulker-${{ matrix.goos }}-${{ matrix.goarch }}*
          retention-days: 7

  release:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Check artifacts structure
        run: |
          echo "=== Artifacts structure ==="
          find artifacts -type f -exec ls -la {} \;
          echo "=== File types ==="
          find artifacts -name "bulker-*" -not -name "*.sha256" -exec file {} \;

      - name: Prepare release files
        run: |
          mkdir -p release
          
          # Copy all binaries and checksums to release directory
          find artifacts -name "bulker-*" -exec cp {} release/ \;
          
          # Create combined checksum file
          cd release
          cat *.sha256 > checksums.txt || true
          
          echo "=== Release files ==="
          ls -la

      - name: Create Release and Upload Binaries
        uses: softprops/action-gh-release@v2
        with:
          files: release/*
          generate_release_notes: true
          draft: false 